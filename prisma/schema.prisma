generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  ORGANIZER
  VIEWER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?
  role      Role     @default(VIEWER)
  createdAt DateTime @default(now())
}

model Player {
  id           String   @id @default(uuid())
  name         String
  jerseyNumber Int?
  email        String?
  winners      Winner[]
  sales        Sale[]
  createdAt    DateTime @default(now())
}

model Buyer {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String?
  facebook  Boolean?
  sales     Sale[]
  createdAt DateTime @default(now())
}

model Sale {
  id        String   @id @default(uuid())
  buyerId   String
  playerId  String?
  buyer     Buyer    @relation(fields: [buyerId], references: [id])
  player    Player?  @relation(fields: [playerId], references: [id])
  qty       Int
  due       Float
  received  Float
  balance   Float
  note      String?
  createdAt DateTime @default(now())
}

model Game {
  id        String   @id @default(uuid())
  week      Int
  date      DateTime
  homeTeam  String
  awayTeam  String
  boards    Board[]
  winners   Winner[]
  scores    Score[]
}

model Board {
  id          String   @id @default(uuid())
  gameId      String
  game        Game     @relation(fields: [gameId], references: [id])
  boardNumber Int
  squares     Json

  @@unique([gameId, boardNumber])
}

model Winner {
  id          String   @id @default(uuid())
  gameId      String
  game        Game     @relation(fields: [gameId], references: [id])
  boardId     String?
  boardNumber Int?
  quarter     String
  square      String
  payout      Float
  playerId    String?
  player      Player?  @relation(fields: [playerId], references: [id])
  createdAt   DateTime @default(now())

  @@unique([gameId, quarter])
}

model Score {
  id        String   @id @default(uuid())
  gameId    String
  quarter   String
  homeScore Int
  awayScore Int
  createdAt DateTime @default(now())

  game Game @relation(fields: [gameId], references: [id])

  @@unique([gameId, quarter])
}

model ImportAudit {
  id        String   @id @default(uuid())
  type      String
  actor     String?
  info      Json?
  createdAt DateTime @default(now())
}

model MagicLinkToken {
  id         String   @id @default(uuid())
  email      String
  token      String   @unique
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())
}
