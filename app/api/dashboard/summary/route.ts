
import { NextResponse } from "next/server"; import { PrismaClient } from "@prisma/client"; const prisma = new PrismaClient();
export async function GET(req: Request){ const games = await prisma.game.findMany({ include: { boards: true } }); const [playersCount, buyersCount, sales, allWinners] = await Promise.all([ prisma.player.count(), prisma.buyer.count(), prisma.sale.findMany(), prisma.winner.findMany() ]); const totalDue = sales.reduce((s, x) => s + (x.due || 0), 0); const totalReceived = sales.reduce((s, x) => s + (x.received || 0), 0); const totalBalance = sales.reduce((s, x) => s + (x.balance || 0), 0); const winnersPayout = allWinners.reduce((s, w) => s + (w.payout || 0), 0); const perGame = games.map(g=>({ id:g.id, week:g.week, date:g.date, homeTeam:g.homeTeam, awayTeam:g.awayTeam, boardTotals:{1:0,2:0}, winners:0 })); return NextResponse.json({ kpis: { players: playersCount, buyers: buyersCount, totalDue, totalReceived, totalBalance, games: games.length, winnersTotal: allWinners.length, winnersPayout }, perGame }); }
