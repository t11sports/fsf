
import { NextResponse } from "next/server"; import { PrismaClient } from "@prisma/client"; const prisma = new PrismaClient();
function row(fields:(string|number|null|undefined)[]){ return fields.map(v=>{ const s = v==null ? '' : String(v); return (s.includes(',')||s.includes('"')||s.includes('\n')) ? '"'+s.replace(/"/g,'""')+'"' : s; }).join(','); }
export async function GET(){ const sales = await prisma.sale.findMany({ include: { buyer: true, player: true } }); const header = ["SaleId","Date","Buyer","Player","Qty","Due","Received","Balance","Note"]; const rows = sales.map(s=>[ s.id, s.createdAt.toISOString().slice(0,10), (s as any).buyer?.name ?? "", (s as any).player?.name ?? "", s.qty ?? 0, s.due ?? 0, s.received ?? 0, s.balance ?? 0, s.note ?? "" ]); const csv = [row(header), ...rows.map(row)].join('\n'); return new NextResponse(csv, { headers: { "Content-Type":"text/csv", "Content-Disposition": 'attachment; filename="sales.csv"' } }); }
