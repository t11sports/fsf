
'use client';
import { useEffect, useState } from 'react';
type User={ id:string; email:string; name?:string|null; role:'ADMIN'|'ORGANIZER'|'VIEWER'; createdAt:string };
export default function UsersAdmin(){
  const [users,setUsers]=useState<User[]>([]); const [email,setEmail]=useState(''); const [name,setName]=useState(''); const [role,setRole]=useState<'ADMIN'|'ORGANIZER'|'VIEWER'>('VIEWER');
  async function load(){ const r=await fetch('/api/admin/users'); if(!r.ok){ alert('Not authorized (ADMIN only)'); return; } setUsers(await r.json()); } useEffect(()=>{ load(); }, []);
  async function createUser(){ const r=await fetch('/api/admin/users',{ method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ email, name, role }) }); if(!r.ok){ alert('Failed'); return;} setEmail(''); setName(''); setRole('VIEWER'); load(); }
  async function updateUser(u:User,patch:Partial<User>){ const r=await fetch(`/api/admin/users/${u.id}`,{ method:'PUT', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ ...u, ...patch }) }); if(r.ok) load(); }
  async function removeUser(u:User){ if(!confirm(`Delete ${u.email}?`)) return; const r=await fetch(`/api/admin/users/${u.id}`,{ method:'DELETE' }); if(r.ok) load(); }
  return (<div className="space-y-6"><h1 className="text-2xl font-bold">Admin Â· Users</h1><div className="p-4 border rounded bg-white grid md:grid-cols-4 gap-2 items-end"><div><label className="text-xs">Email</label><input className="border p-2 w-full" value={email} onChange={e=>setEmail(e.target.value)} /></div><div><label className="text-xs">Name</label><input className="border p-2 w-full" value={name} onChange={e=>setName(e.target.value)} /></div><div><label className="text-xs">Role</label><select className="border p-2 w-full" value={role} onChange={e=>setRole(e.target.value as any)}><option value="VIEWER">VIEWER</option><option value="ORGANIZER">ORGANIZER</option><option value="ADMIN">ADMIN</option></select></div><button onClick={createUser} className="px-4 py-2 bg-black text-white rounded">Add User</button></div><div className="p-4 border rounded bg-white"><table className="w-full text-sm"><thead><tr className="text-left"><th>Email</th><th>Name</th><th>Role</th><th>Actions</th></tr></thead><tbody>{users.map(u=>(<tr key={u.id} className="border-t"><td>{u.email}</td><td>{u.name||'-'}</td><td><select className="border p-1" value={u.role} onChange={e=>updateUser(u,{ role:e.target.value as any })}><option value="VIEWER">VIEWER</option><option value="ORGANIZER">ORGANIZER</option><option value="ADMIN">ADMIN</option></select></td><td><button className="text-red-600" onClick={()=>removeUser(u)}>Delete</button></td></tr>))}{!users.length && <tr><td colSpan={4} className="py-8 text-center opacity-60">No users yet</td></tr>}</tbody></table></div></div>);
}
